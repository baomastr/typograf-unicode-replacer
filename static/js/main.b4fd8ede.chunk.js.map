{"version":3,"sources":["components/TextAreaField.js","components/ScrollableTabsButtonAuto.js","utils/getReplacedOutput.js","utils/typograf.js","utils/patch.js","constants.js","components/App.js","index.js"],"names":["TextAreaField","renderInput","onChange","hasError","react_default","a","createElement","TextField_default","id","label","placeholder","multiline","margin","variant","className","error","rows","renderOutput","value","inputRef","console","log","_this$props","this","props","isOutput","React","PureComponent","defaultProps","TabContainer","style","padding","children","ScrollableTabsButtonAuto","state","handleChange","event","_this","setState","classes","tabsContent","root","AppBar_default","position","color","Tabs_default","indicatorColor","textColor","centered","map","item","index","Tab_default","key","component","Component","withStyles","theme","flexGrow","width","backgroundColor","palette","background","paper","getReplacedOutput","input","replace","Typografer","addRule","name","handler","text","re","RegExp","concat","_privateLabel","$0","$1","$2","typograf","locale","live","htmlEntity","type","onlyInvisible","enableRule","disableRule","typografer","execute","patch","Array","isArray","el","Object","entries","reduce","acc","_ref","_ref2","slicedToArray","k","v","CASES","JSON","HTML","REPLACER","config","textInput","textError","textOutput","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","result","handleInputJSONTypografChange","target","data","parse","patched","stringify","err","handleInputHTMLTypografChange","handleInputReplacerChange","_ref3","handleCopyOutput","ref","current","select","document","execCommand","getCaseHandler","renderCopyButton","Fab_default","onClick","aria-label","FileCopyOutlined_default","renderOutputField","components_TextAreaField","renderCase","isJson","isHtml","react","htmlOutput","replacedOutput","jsonOutput","getTabsContent","createRef","components_ScrollableTabsButtonAuto","rootElement","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.b4fd8ede.chunk.js","sourcesContent":["import React from 'react';\nimport pt from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nclass TextAreaField extends React.PureComponent {\n  renderInput = (onChange, hasError) => {\n    return (\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Paste content here\"\n        placeholder=\"Input\"\n        multiline\n        margin=\"normal\"\n        variant=\"outlined\"\n        className=\"textArea\"\n        error={hasError}\n        onChange={onChange}\n        rows={15}\n      />\n    );\n  };\n\n  renderOutput = (value, inputRef) => {\n    console.log(value);\n    return (\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Copy output\"\n        placeholder=\"Output\"\n        multiline\n        margin=\"normal\"\n        variant=\"outlined\"\n        className=\"textArea\"\n        value={value}\n        rows={15}\n        inputRef={inputRef}\n      />\n    );\n  };\n\n  render() {\n    const {onChange, value, isOutput, hasError, inputRef} = this.props;\n\n    return isOutput ? this.renderOutput(value, inputRef) : this.renderInput(onChange, hasError);\n  }\n}\n\nTextAreaField.propTypes = {\n  onChange: pt.func,\n  value: pt.string,\n  isOutput: pt.bool,\n  hasError: pt.bool,\n  inputRef: pt.object,\n};\n\nTextAreaField.defaultProps = {\n  onChange: () => {},\n  value: '',\n  isOutput: false,\n  hasError: false,\n  inputRef: {},\n};\n\nexport default TextAreaField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nfunction TabContainer(props) {\n  return <div style={{padding: 8 * 3}}>{props.children}</div>;\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n});\n\nclass ScrollableTabsButtonAuto extends React.Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({value});\n  };\n\n  render() {\n    const {classes, tabsContent} = this.props;\n    const {value} = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"sticky\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={this.handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            {tabsContent.map((item, index) => (\n              <Tab key={index} label={item.label} />\n            ))}\n          </Tabs>\n        </AppBar>\n\n        {tabsContent.map(\n          (item, index) =>\n            value === index && <TabContainer key={index}>{item.component}</TabContainer>\n        )}\n      </div>\n    );\n  }\n}\n\nScrollableTabsButtonAuto.propTypes = {\n  classes: PropTypes.object.isRequired,\n  tabsContent: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(ScrollableTabsButtonAuto);\n","export const getReplacedOutput = input => {\n  return (\n    input\n      .replace(/&nbsp;/g, `\\\\u00a0`) // space\n      .replace(/&mdash;/g, `\\\\u2014`) // —\n      .replace(/&ndash;/g, `\\\\u2013`) // –\n      .replace(/&laquo;/g, `\\\\u00AB`) // «\n      .replace(/&raquo;/g, `\\\\u00BB`) // »\n      .replace(/&#8381;/g, `\\\\u20BD`) // ₽\n      // .replace(/₽/g, `\\\\u20BD`) // ₽\n      .replace(/&#8198;/g, `\\\\u2006`)\n  ); // Six-Per-Em Space\n};\n","// https://github.com/typograf/typograf\nimport Typografer from 'typograf';\n\nTypografer.addRule({\n  name: 'ru/nbsp/groupNumbersNew',\n  handler(text) {\n    const re = new RegExp(\n      `(^ ?|\\\\D |${Typografer._privateLabel})(\\\\d{1,3}([ \\u00A0\\u202F\\u2009]\\\\d{3})+)(?! ?[\\\\d-])`,\n      'gm'\n    );\n\n    return text.replace(re, function($0, $1, $2) {\n      return $1 + $2.replace(/\\s/g, '\\u00A0');\n    });\n  },\n})\n\n  .addRule({\n    name: 'common/nbsp/TinkoffBank',\n    handler: function(text) {\n      return text.replace(/(Тинькофф)\\s+(Банк)/gi, '$1\\u00A0$2');\n    },\n  })\n\n  .addRule({\n    name: 'common/nbsp/TinkoffBlack',\n    handler: function(text) {\n      return text.replace(/(Tinkoff)\\s+(Black)/gi, '$1\\u00A0$2');\n    },\n  })\n\n  .addRule({\n    name: 'common/nbsp/betweenWordAndNumber',\n    handler: function(text) {\n      return text.replace(/([\\wа-я]+) (\\d+)/gi, '$1\\u00A0$2');\n    },\n  })\n\n  .addRule({\n    name: 'common/nbsp/ALLGames',\n    handler: function(text) {\n      return text.replace(/ALL Games/gi, 'ALL\\u00A0Games');\n    },\n  });\n\nconst typograf = new Typografer({\n  locale: ['ru', 'en-US'],\n  live: true,\n  htmlEntity: {\n    type: 'name',\n    onlyInvisible: true,\n  },\n});\n\ntypograf\n  .enableRule('ru/money/currency')\n  .enableRule('common/punctuation/*')\n  .enableRule('common/nbsp/afterNumber')\n  .enableRule('common/symbols/*')\n  .disableRule('ru/nbsp/groupNumbers')\n  .disableRule('ru/date/fromISO')\n  .disableRule('common/number/fraction');\n\nexport const typografer = input => {\n  return typograf.execute(input);\n};\n","import {typografer} from './typograf';\n\nexport const patch = root => {\n  if (Array.isArray(root)) {\n    return root.map(el => patch(el));\n  } else if (root !== null && typeof root === 'object') {\n    return Object.entries(root).reduce((acc, [k, v]) => {\n      if (typeof v === 'string') {\n        acc[k] = typografer(v);\n      } else {\n        acc[k] = patch(v);\n      }\n\n      return acc;\n    }, {});\n  } else if (typeof root === 'string') {\n    return typografer(root);\n  } else {\n    return root;\n  }\n};\n","export const CASES = {\n  JSON: 'json',\n  HTML: 'html',\n  REPLACER: 'replacer',\n};\n\nexport const config = [\n  {\n    name: CASES.JSON,\n    label: 'Json Typograf',\n    textInput: '↓ paste json ↓',\n    textError: '⊗ invalid json ⊗',\n    textOutput: 'json output ↵',\n  },\n  {\n    name: CASES.HTML,\n    label: 'Html Typograf',\n    textInput: '↓ paste text ↓',\n    textOutput: 'html/json output ↵',\n  },\n  {\n    name: CASES.REPLACER,\n    label: 'String Replacer',\n    textInput: '↓ paste text ↓',\n    textOutput: 'replaced text output ↵',\n  },\n];\n","import React, {Fragment} from 'react';\n/*material-ui*/\nimport Fab from '@material-ui/core/Fab';\nimport CopyIcon from '@material-ui/icons/FileCopyOutlined';\n/*components*/\nimport TextAreaField from './TextAreaField';\nimport Tabs from './ScrollableTabsButtonAuto';\n/*utils*/\nimport {getReplacedOutput} from '../utils/getReplacedOutput';\nimport {patch} from '../utils/patch';\nimport {typografer} from '../utils/typograf';\n/*constants*/\nimport {CASES, config} from '../constants';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.htmlOutput = React.createRef();\n    this.replacedOutput = React.createRef();\n    this.jsonOutput = React.createRef();\n  }\n\n  state = {\n    result: '',\n    error: null,\n  };\n\n  handleInputJSONTypografChange = ({target: {value}}) => {\n    try {\n      const data = JSON.parse(value);\n      const patched = patch(data);\n      this.setState({\n        error: null,\n        result: getReplacedOutput(JSON.stringify(patched, null, 2)),\n      });\n    } catch (err) {\n      this.setState({error: err});\n    }\n  };\n\n  handleInputHTMLTypografChange = ({target: {value}}) => {\n    this.setState({result: typografer(value)});\n  };\n\n  handleInputReplacerChange = ({target: {value}}) => {\n    this.setState({result: getReplacedOutput(value)});\n  };\n\n  handleCopyOutput = ref => () => {\n    ref.current.select();\n    document.execCommand('copy');\n  };\n\n  getCaseHandler = name => {\n    switch (name) {\n      case CASES.JSON:\n        return this.handleInputJSONTypografChange;\n      case CASES.HTML:\n        return this.handleInputHTMLTypografChange;\n      case CASES.REPLACER:\n        return this.handleInputReplacerChange;\n    }\n  };\n\n  renderCopyButton = ref => (\n    <Fab onClick={this.handleCopyOutput(ref)} color=\"primary\" aria-label=\"Copy\" className=\"btnCopy\">\n      <CopyIcon />\n    </Fab>\n  );\n\n  renderOutputField = ref => <TextAreaField inputRef={ref} value={this.state.result} isOutput />;\n\n  renderCase = item => {\n    const {error} = this.state;\n    const {name, textInput, textOutput, textError} = item;\n    const isJson = name === CASES.JSON;\n    const isHtml = name === CASES.HTML;\n\n    return (\n      <Fragment>\n        {/*input*/}\n        <span>{textInput}</span>\n        <TextAreaField onChange={this.getCaseHandler(name)} hasError={isJson && !!error} />\n\n        {/*if error*/}\n        {error && textError && <p className=\"errorMessage\">{textError}</p>}\n\n        {/*output*/}\n        <div className=\"outputWrapper\">\n          <p>{textOutput}</p>\n\n          {isHtml ? (\n            <div className=\"flex-row\">\n              <div className=\"column\">\n                {this.renderCopyButton(this.htmlOutput)}\n                {this.renderOutputField(this.htmlOutput)}\n              </div>\n\n              <div className=\"column\">\n                {this.renderCopyButton(this.replacedOutput)}\n                {this.renderOutputField(this.replacedOutput)}\n              </div>\n            </div>\n          ) : (\n            <Fragment>\n              {this.renderCopyButton(this.jsonOutput)}\n              {this.renderOutputField(this.jsonOutput)}\n            </Fragment>\n          )}\n        </div>\n      </Fragment>\n    );\n  };\n\n  getTabsContent = () => {\n    return config.map(item => {\n      return {\n        name: item.name,\n        label: item.label,\n        component: this.renderCase(item),\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Tabs tabsContent={this.getTabsContent()} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}