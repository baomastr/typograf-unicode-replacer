{"version":3,"sources":["components/TextAreaField.js","components/TabsWrapper.js","utils/getReplacedOutput.js","utils/typograf.js","utils/patch.js","constants.js","components/App.js","index.js"],"names":["TextAreaField","renderInput","onChange","hasError","react_default","a","createElement","TextField_default","id","label","placeholder","multiline","margin","variant","className","error","rows","renderOutput","value","inputRef","_this$props","this","props","isOutput","React","PureComponent","defaultProps","TabsWrapper","state","handleChange","event","_this","setState","tabsContent","Fragment","AppBar_default","position","color","Tabs_default","indicatorColor","textColor","centered","map","item","index","Tab_default","key","component","getReplacedOutput","input","replace","Typografer","require","upperFirst","addRule","name","handler","text","re","RegExp","concat","_privateLabel","$0","$1","$2","_len","arguments","length","x","Array","_key","toUpperCase","typograf","locale","live","htmlEntity","type","onlyInvisible","enableRule","disableRule","typografer","execute","patch","root","isArray","el","Object","entries","reduce","acc","_ref","_ref2","slicedToArray","k","v","CASES","JSON","HTML","REPLACER","config","textInput","textError","textOutput","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","result","handleInputJSONTypografChange","target","data","parse","patched","stringify","err","handleInputHTMLTypografChange","handleInputReplacerChange","_ref3","handleCopyOutput","ref","current","select","document","execCommand","getCaseHandler","renderCopyButton","Fab_default","onClick","aria-label","FileCopyOutlined_default","renderOutputField","isReplacedOutput","components_TextAreaField","renderCase","isJson","isHtml","cn","errorMessage","htmlOutput","replacedOutput","jsonOutput","getTabsContent","createRef","components_TabsWrapper","rootElement","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.ca01acae.chunk.js","sourcesContent":["import React from 'react';\nimport pt from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nclass TextAreaField extends React.PureComponent {\n  renderInput = (onChange, hasError) => {\n    return (\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Paste content here\"\n        placeholder=\"Input\"\n        multiline\n        margin=\"normal\"\n        variant=\"outlined\"\n        className=\"textArea\"\n        error={hasError}\n        onChange={onChange}\n        rows={15}\n      />\n    );\n  };\n\n  renderOutput = (value, inputRef) => {\n    return (\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Copy output\"\n        placeholder=\"Output\"\n        multiline\n        margin=\"normal\"\n        variant=\"outlined\"\n        className=\"textArea\"\n        value={value}\n        rows={15}\n        inputRef={inputRef}\n      />\n    );\n  };\n\n  render() {\n    const {onChange, value, isOutput, hasError, inputRef} = this.props;\n\n    return isOutput ? this.renderOutput(value, inputRef) : this.renderInput(onChange, hasError);\n  }\n}\n\nTextAreaField.propTypes = {\n  onChange: pt.func,\n  value: pt.string,\n  isOutput: pt.bool,\n  hasError: pt.bool,\n  inputRef: pt.object,\n};\n\nTextAreaField.defaultProps = {\n  onChange: () => {},\n  value: '',\n  isOutput: false,\n  hasError: false,\n  inputRef: {},\n};\n\nexport default TextAreaField;\n","import React from 'react';\nimport pt from 'prop-types';\n/*material-ui*/\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nclass TabsWrapper extends React.PureComponent {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({value});\n  };\n\n  render() {\n    const {tabsContent} = this.props;\n    const {value} = this.state;\n\n    return (\n      <>\n        <AppBar position=\"sticky\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={this.handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            {tabsContent.map((item, index) => (\n              <Tab key={index} label={item.label} />\n            ))}\n          </Tabs>\n        </AppBar>\n\n        {tabsContent.map(\n          (item, index) =>\n            value === index && (\n              <main key={index} className=\"page\">\n                {item.component}\n              </main>\n            )\n        )}\n      </>\n    );\n  }\n}\n\nTabsWrapper.propTypes = {\n  tabsContent: pt.array.isRequired,\n};\n\nexport default TabsWrapper;\n","export const getReplacedOutput = input => {\n  return (\n    input\n      .replace(/&zwj;♂️/g, `\\\\u{200D}\\\\u{2642}\\\\u{FE0F}`) // 💇‍♂️ to male\n      .replace(/&zwj;♀️/g, `\\\\u{200D}\\\\u{2640}\\\\u{FE0F}`) // 💆‍♀️ to female\n      .replace(/&nbsp;/g, `\\\\u00a0`) // space\n      .replace(/&mdash;/g, `\\\\u2014`) // —\n      .replace(/&ndash;/g, `\\\\u2013`) // –\n      .replace(/&laquo;/g, `\\\\u00AB`) // «\n      .replace(/&raquo;/g, `\\\\u00BB`) // »\n      .replace(/&#8381;/g, `\\\\u20BD`) // ₽\n      // .replace(/₽/g, `\\\\u20BD`) // ₽\n      .replace(/&#8198;/g, `\\\\u2006`) // Six-Per-Em Space\n  );\n};\n","// https://github.com/typograf/typograf\nconst Typografer = require('typograf');\nconst upperFirst = require('lodash/upperFirst');\n\nTypografer.addRule({\n  name: 'ru/nbsp/groupNumbersNew',\n  handler(text) {\n    const re = new RegExp(\n      `(^ ?|\\\\D |${Typografer._privateLabel})(\\\\d{1,3}([ \\u00A0\\u202F\\u2009]\\\\d{3})+)(?! ?[\\\\d-])`,\n      'gm'\n    );\n\n    return text.replace(re, function($0, $1, $2) {\n      return $1 + $2.replace(/\\s/g, '\\u00A0');\n    });\n  },\n})\n\n  .addRule({\n    name: 'common/nbsp/TinkoffBank',\n    handler(text) {\n      return text.replace(/(Тинькофф)\\s+(Банк)/gi, '$1\\u00A0$2');\n    },\n  })\n\n  .addRule({\n    name: 'common/nbsp/TinkoffBlack',\n    handler(text) {\n      return text.replace(/(Tinkoff)\\s+(Black)/gi, '$1\\u00A0$2');\n    },\n  })\n\n  .addRule({\n    name: 'common/nbsp/betweenWordAndNumber',\n    handler(text) {\n      return text.replace(/([\\wа-я]+) (\\d+)/gi, '$1\\u00A0$2');\n    },\n  })\n\n  .addRule({\n    name: 'common/nbsp/betweenNumbers',\n    handler(text) {\n      return text.replace(/(\\d+) (\\d+)/gi, '$1\\u00A0$2');\n    },\n  })\n\n  .addRule({\n    name: 'common/nbsp/ALLCards',\n    handler(text) {\n      return text.replace(/(ALL)\\s+(Games|Airlines)/gi, (...x) => {\n        return `${x[1].toUpperCase()}\\u00A0${upperFirst(x[2])}`;\n      });\n    },\n  })\n\n  .addRule({\n    name: 'ru/money/currencyNew',\n    handler(text) {\n      return text.replace(/([\\s]+)([$€¥Ұ£₤₽])/gm, '\\u00A0$2');\n    },\n  });\n\nconst typograf = new Typografer({\n  locale: ['ru', 'en-US'],\n  live: false, // true затирает &nbsp;\n  htmlEntity: {\n    type: 'name',\n    onlyInvisible: true,\n  },\n});\n\ntypograf\n  // .enableRule('ru/money/currency') // заменено на ru/money/currencyNew т.к. ломалась строка с точкой после ₽, завёл ишью https://github.com/typograf/typograf/issues/359\n  .enableRule('common/punctuation/*')\n  .enableRule('common/nbsp/afterNumber')\n  .enableRule('common/symbols/*')\n  .disableRule('ru/nbsp/groupNumbers')\n  .disableRule('ru/date/fromISO')\n  .disableRule('common/number/fraction');\n\nexport const typografer = input => {\n  return typograf.execute(input);\n};\n","import {typografer} from './typograf';\n\nexport const patch = root => {\n  if (Array.isArray(root)) {\n    return root.map(el => patch(el));\n  } else if (root !== null && typeof root === 'object') {\n    return Object.entries(root).reduce((acc, [k, v]) => {\n      if (typeof v === 'string') {\n        acc[k] = typografer(v);\n      } else {\n        acc[k] = patch(v);\n      }\n\n      return acc;\n    }, {});\n  } else if (typeof root === 'string') {\n    return typografer(root);\n  } else {\n    return root;\n  }\n};\n","export const CASES = {\n  JSON: 'JSON',\n  HTML: 'HTML',\n  REPLACER: 'REPLACER',\n};\n\nexport const config = [\n  {\n    name: CASES.JSON,\n    label: 'Json Typograf',\n    textInput: '↓ paste json ↓',\n    textError: '⊗ invalid json ⊗',\n    textOutput: 'json output ↵',\n  },\n  {\n    name: CASES.HTML,\n    label: 'Html Typograf',\n    textInput: '↓ paste text ↓',\n    textOutput: 'html/json output ↵',\n  },\n  {\n    name: CASES.REPLACER,\n    label: 'String Replacer',\n    textInput: '↓ paste text ↓',\n    textOutput: 'replaced text output ↵',\n  },\n];\n","import React from 'react';\nimport cn from 'classnames';\n/*material-ui*/\nimport Fab from '@material-ui/core/Fab';\nimport CopyIcon from '@material-ui/icons/FileCopyOutlined';\n/*components*/\nimport TextAreaField from './TextAreaField';\nimport TabsWrapper from './TabsWrapper';\n/*utils*/\nimport {getReplacedOutput} from '../utils/getReplacedOutput';\nimport {patch} from '../utils/patch';\nimport {typografer} from '../utils/typograf';\n/*constants*/\nimport {CASES, config} from '../constants';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.htmlOutput = React.createRef();\n    this.replacedOutput = React.createRef();\n    this.jsonOutput = React.createRef();\n  }\n\n  state = {\n    result: '',\n    error: null,\n  };\n\n  handleInputJSONTypografChange = ({target: {value}}) => {\n    try {\n      const data = JSON.parse(value);\n      const patched = patch(data);\n      this.setState({\n        error: null,\n        result: getReplacedOutput(JSON.stringify(patched, null, 2)),\n      });\n    } catch (err) {\n      this.setState({error: err});\n    }\n  };\n\n  handleInputHTMLTypografChange = ({target: {value}}) => {\n    this.setState({result: typografer(value)});\n  };\n\n  handleInputReplacerChange = ({target: {value}}) => {\n    this.setState({result: getReplacedOutput(value)});\n  };\n\n  handleCopyOutput = ref => () => {\n    ref.current.select();\n    document.execCommand('copy');\n  };\n\n  getCaseHandler = name => {\n    switch (name) {\n      case CASES.JSON:\n        return this.handleInputJSONTypografChange;\n      case CASES.HTML:\n        return this.handleInputHTMLTypografChange;\n      case CASES.REPLACER:\n        return this.handleInputReplacerChange;\n      default:\n        break;\n    }\n  };\n\n  renderCopyButton = ref => (\n    <Fab onClick={this.handleCopyOutput(ref)} color=\"primary\" aria-label=\"Copy\" className=\"btnCopy\">\n      <CopyIcon />\n    </Fab>\n  );\n\n  renderOutputField = (ref, isReplacedOutput) => (\n    <TextAreaField\n      inputRef={ref}\n      value={isReplacedOutput ? getReplacedOutput(this.state.result) : this.state.result}\n      isOutput\n    />\n  );\n\n  renderCase = item => {\n    const {error} = this.state;\n    const {name, textInput, textOutput, textError} = item;\n    const isJson = name === CASES.JSON;\n    const isHtml = name === CASES.HTML;\n\n    return (\n      <>\n        {/*input*/}\n        <span>{textInput}</span>\n        <TextAreaField onChange={this.getCaseHandler(name)} hasError={isJson && !!error} />\n\n        {/*output*/}\n        <div className=\"outputWrapper\">\n          <p\n            className={cn({\n              errorMessage: error && !!textError,\n            })}\n          >\n            {error && textError ? textError : textOutput}\n          </p>\n\n          {isHtml ? (\n            <div className=\"flex-row\">\n              <div className=\"column\">\n                {this.renderCopyButton(this.htmlOutput)}\n                {this.renderOutputField(this.htmlOutput)}\n              </div>\n\n              <div className=\"column\">\n                {this.renderCopyButton(this.replacedOutput)}\n                {this.renderOutputField(this.replacedOutput, true)}\n              </div>\n            </div>\n          ) : (\n            <>\n              {this.renderCopyButton(this.jsonOutput)}\n              {this.renderOutputField(this.jsonOutput)}\n            </>\n          )}\n        </div>\n      </>\n    );\n  };\n\n  getTabsContent = () => {\n    return config.map(item => {\n      return {\n        name: item.name,\n        label: item.label,\n        component: this.renderCase(item),\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TabsWrapper tabsContent={this.getTabsContent()} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}