{"version":3,"sources":["components/TextAreaField.js","components/TabsWrapper.js","utils/getReplacedOutput.js","utils/typograf.js","utils/patch.js","constants.js","components/App.js","index.js"],"names":["TextAreaField","renderInput","onChange","hasError","react_default","a","createElement","TextField_default","id","label","placeholder","multiline","margin","variant","className","error","rows","renderOutput","value","inputRef","_this$props","this","props","isOutput","React","PureComponent","defaultProps","TabsWrapper","state","handleChange","event","_this","setState","tabsContent","Fragment","AppBar_default","position","color","Tabs_default","indicatorColor","textColor","centered","map","item","index","Tab_default","key","component","getReplacedOutput","input","replace","Typografer","addRule","name","handler","text","re","RegExp","concat","_privateLabel","$0","$1","$2","typograf","locale","live","htmlEntity","type","onlyInvisible","enableRule","disableRule","typografer","execute","patch","root","Array","isArray","el","Object","entries","reduce","acc","_ref","_ref2","slicedToArray","k","v","CASES","JSON","HTML","REPLACER","config","textInput","textError","textOutput","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","result","handleInputJSONTypografChange","target","data","parse","patched","stringify","err","handleInputHTMLTypografChange","handleInputReplacerChange","_ref3","handleCopyOutput","ref","current","select","document","execCommand","getCaseHandler","renderCopyButton","Fab_default","onClick","aria-label","FileCopyOutlined_default","renderOutputField","components_TextAreaField","renderCase","isJson","isHtml","react","cn","defineProperty","htmlOutput","replacedOutput","jsonOutput","getTabsContent","createRef","components_TabsWrapper","rootElement","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.0225f286.chunk.js","sourcesContent":["import React from 'react';\nimport pt from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nclass TextAreaField extends React.PureComponent {\n  renderInput = (onChange, hasError) => {\n    return (\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Paste content here\"\n        placeholder=\"Input\"\n        multiline\n        margin=\"normal\"\n        variant=\"outlined\"\n        className=\"textArea\"\n        error={hasError}\n        onChange={onChange}\n        rows={15}\n      />\n    );\n  };\n\n  renderOutput = (value, inputRef) => {\n    return (\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Copy output\"\n        placeholder=\"Output\"\n        multiline\n        margin=\"normal\"\n        variant=\"outlined\"\n        className=\"textArea\"\n        value={value}\n        rows={15}\n        inputRef={inputRef}\n      />\n    );\n  };\n\n  render() {\n    const {onChange, value, isOutput, hasError, inputRef} = this.props;\n\n    return isOutput ? this.renderOutput(value, inputRef) : this.renderInput(onChange, hasError);\n  }\n}\n\nTextAreaField.propTypes = {\n  onChange: pt.func,\n  value: pt.string,\n  isOutput: pt.bool,\n  hasError: pt.bool,\n  inputRef: pt.object,\n};\n\nTextAreaField.defaultProps = {\n  onChange: () => {},\n  value: '',\n  isOutput: false,\n  hasError: false,\n  inputRef: {},\n};\n\nexport default TextAreaField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n/*material-ui*/\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nclass TabsWrapper extends React.PureComponent {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({value});\n  };\n\n  render() {\n    const {tabsContent} = this.props;\n    const {value} = this.state;\n\n    return (\n      <React.Fragment>\n        <AppBar position=\"sticky\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={this.handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            {tabsContent.map((item, index) => (\n              <Tab key={index} label={item.label} />\n            ))}\n          </Tabs>\n        </AppBar>\n\n        {tabsContent.map(\n          (item, index) =>\n            value === index && (\n              <main key={index} className=\"page\">\n                {item.component}\n              </main>\n            )\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nTabsWrapper.propTypes = {\n  tabsContent: PropTypes.array.isRequired,\n};\n\nexport default TabsWrapper;\n","export const getReplacedOutput = input => {\n  return (\n    input\n      .replace(/&nbsp;/g, `\\\\u00a0`) // space\n      .replace(/&mdash;/g, `\\\\u2014`) // —\n      .replace(/&ndash;/g, `\\\\u2013`) // –\n      .replace(/&laquo;/g, `\\\\u00AB`) // «\n      .replace(/&raquo;/g, `\\\\u00BB`) // »\n      .replace(/&#8381;/g, `\\\\u20BD`) // ₽\n      // .replace(/₽/g, `\\\\u20BD`) // ₽\n      .replace(/&#8198;/g, `\\\\u2006`) // Six-Per-Em Space\n  );\n};\n","// https://github.com/typograf/typograf\nimport Typografer from 'typograf';\n\nTypografer.addRule({\n  name: 'ru/nbsp/groupNumbersNew',\n  handler(text) {\n    const re = new RegExp(\n      `(^ ?|\\\\D |${Typografer._privateLabel})(\\\\d{1,3}([ \\u00A0\\u202F\\u2009]\\\\d{3})+)(?! ?[\\\\d-])`,\n      'gm'\n    );\n\n    return text.replace(re, function($0, $1, $2) {\n      return $1 + $2.replace(/\\s/g, '\\u00A0');\n    });\n  },\n})\n\n  .addRule({\n    name: 'common/nbsp/TinkoffBank',\n    handler: function(text) {\n      return text.replace(/(Тинькофф)\\s+(Банк)/gi, '$1\\u00A0$2');\n    },\n  })\n\n  .addRule({\n    name: 'common/nbsp/TinkoffBlack',\n    handler: function(text) {\n      return text.replace(/(Tinkoff)\\s+(Black)/gi, '$1\\u00A0$2');\n    },\n  })\n\n  .addRule({\n    name: 'common/nbsp/betweenWordAndNumber',\n    handler: function(text) {\n      return text.replace(/([\\wа-я]+) (\\d+)/gi, '$1\\u00A0$2');\n    },\n  })\n\n  .addRule({\n    name: 'common/nbsp/ALLGames',\n    handler: function(text) {\n      return text.replace(/ALL Games/gi, 'ALL\\u00A0Games');\n    },\n  });\n\nconst typograf = new Typografer({\n  locale: ['ru', 'en-US'],\n  live: true,\n  htmlEntity: {\n    type: 'name',\n    onlyInvisible: true,\n  },\n});\n\ntypograf\n  .enableRule('ru/money/currency')\n  .enableRule('common/punctuation/*')\n  .enableRule('common/nbsp/afterNumber')\n  .enableRule('common/symbols/*')\n  .disableRule('ru/nbsp/groupNumbers')\n  .disableRule('ru/date/fromISO')\n  .disableRule('common/number/fraction');\n\nexport const typografer = input => {\n  return typograf.execute(input);\n};\n","import {typografer} from './typograf';\n\nexport const patch = root => {\n  if (Array.isArray(root)) {\n    return root.map(el => patch(el));\n  } else if (root !== null && typeof root === 'object') {\n    return Object.entries(root).reduce((acc, [k, v]) => {\n      if (typeof v === 'string') {\n        acc[k] = typografer(v);\n      } else {\n        acc[k] = patch(v);\n      }\n\n      return acc;\n    }, {});\n  } else if (typeof root === 'string') {\n    return typografer(root);\n  } else {\n    return root;\n  }\n};\n","export const CASES = {\n  JSON: 'JSON',\n  HTML: 'HTML',\n  REPLACER: 'REPLACER',\n};\n\nexport const config = [\n  {\n    name: CASES.JSON,\n    label: 'Json Typograf',\n    textInput: '↓ paste json ↓',\n    textError: '⊗ invalid json ⊗',\n    textOutput: 'json output ↵',\n  },\n  {\n    name: CASES.HTML,\n    label: 'Html Typograf',\n    textInput: '↓ paste text ↓',\n    textOutput: 'html/json output ↵',\n  },\n  {\n    name: CASES.REPLACER,\n    label: 'String Replacer',\n    textInput: '↓ paste text ↓',\n    textOutput: 'replaced text output ↵',\n  },\n];\n","import React, {Fragment} from 'react';\nimport cn from 'classnames';\n/*material-ui*/\nimport Fab from '@material-ui/core/Fab';\nimport CopyIcon from '@material-ui/icons/FileCopyOutlined';\n/*components*/\nimport TextAreaField from './TextAreaField';\nimport TabsWrapper from './TabsWrapper';\n/*utils*/\nimport {getReplacedOutput} from '../utils/getReplacedOutput';\nimport {patch} from '../utils/patch';\nimport {typografer} from '../utils/typograf';\n/*constants*/\nimport {CASES, config} from '../constants';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.htmlOutput = React.createRef();\n    this.replacedOutput = React.createRef();\n    this.jsonOutput = React.createRef();\n  }\n\n  state = {\n    result: '',\n    error: null,\n  };\n\n  handleInputJSONTypografChange = ({target: {value}}) => {\n    try {\n      const data = JSON.parse(value);\n      const patched = patch(data);\n      this.setState({\n        error: null,\n        result: getReplacedOutput(JSON.stringify(patched, null, 2)),\n      });\n    } catch (err) {\n      this.setState({error: err});\n    }\n  };\n\n  handleInputHTMLTypografChange = ({target: {value}}) => {\n    this.setState({result: typografer(value)});\n  };\n\n  handleInputReplacerChange = ({target: {value}}) => {\n    this.setState({result: getReplacedOutput(value)});\n  };\n\n  handleCopyOutput = ref => () => {\n    ref.current.select();\n    document.execCommand('copy');\n  };\n\n  getCaseHandler = name => {\n    switch (name) {\n      case CASES.JSON:\n        return this.handleInputJSONTypografChange;\n      case CASES.HTML:\n        return this.handleInputHTMLTypografChange;\n      case CASES.REPLACER:\n        return this.handleInputReplacerChange;\n    }\n  };\n\n  renderCopyButton = ref => (\n    <Fab onClick={this.handleCopyOutput(ref)} color=\"primary\" aria-label=\"Copy\" className=\"btnCopy\">\n      <CopyIcon />\n    </Fab>\n  );\n\n  renderOutputField = ref => <TextAreaField inputRef={ref} value={this.state.result} isOutput />;\n\n  renderCase = item => {\n    const {error} = this.state;\n    const {name, textInput, textOutput, textError} = item;\n    const isJson = name === CASES.JSON;\n    const isHtml = name === CASES.HTML;\n\n    return (\n      <Fragment>\n        {/*input*/}\n        <span>{textInput}</span>\n        <TextAreaField onChange={this.getCaseHandler(name)} hasError={isJson && !!error} />\n\n        {/*output*/}\n        <div className=\"outputWrapper\">\n          <p\n            className={cn({\n              ['errorMessage']: error,\n            })}\n          >\n            {error ? textError : textOutput}\n          </p>\n\n          {isHtml ? (\n            <div className=\"flex-row\">\n              <div className=\"column\">\n                {this.renderCopyButton(this.htmlOutput)}\n                {this.renderOutputField(this.htmlOutput)}\n              </div>\n\n              <div className=\"column\">\n                {this.renderCopyButton(this.replacedOutput)}\n                {this.renderOutputField(this.replacedOutput)}\n              </div>\n            </div>\n          ) : (\n            <Fragment>\n              {this.renderCopyButton(this.jsonOutput)}\n              {this.renderOutputField(this.jsonOutput)}\n            </Fragment>\n          )}\n        </div>\n      </Fragment>\n    );\n  };\n\n  getTabsContent = () => {\n    return config.map(item => {\n      return {\n        name: item.name,\n        label: item.label,\n        component: this.renderCase(item),\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TabsWrapper tabsContent={this.getTabsContent()} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}