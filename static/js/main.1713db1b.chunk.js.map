{"version":3,"sources":["components/OutlinedTextField.js","components/ScrollableTabsButtonAuto.js","utils/getReplacedOutput.js","utils/typograf.js","utils/patch.js","constants.js","components/App.js","index.js"],"names":["OutlinedTextField","renderInput","onChange","hasError","react_default","a","createElement","TextField_default","id","label","placeholder","multiline","margin","variant","className","error","rows","renderOutput","value","_this$props","this","props","isOutput","React","Component","defaultProps","withStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","TabContainer","style","padding","children","ScrollableTabsButtonAuto","state","handleChange","event","_this","setState","classes","tabsContent","root","AppBar_default","position","color","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","centered","map","item","index","Tab_default","key","component","flexGrow","backgroundColor","palette","background","paper","getReplacedOutput","input","replace","Typografer","addRule","name","handler","text","re","RegExp","concat","_privateLabel","$0","$1","$2","typograf","locale","live","htmlEntity","type","onlyInvisible","enableRule","disableRule","typografer","execute","patch","Array","isArray","el","Object","entries","reduce","acc","_ref","_ref2","slicedToArray","k","v","CASES","JSON","HTML","REPLACER","config","textInput","textError","textOutput","App","result","handleInputJSONTypografChange","target","data","parse","patched","stringify","err","handleInputHTMLTypografChange","handleInputReplacerChange","_ref3","getCaseHandler","renderCase","_this$state","react","components_OutlinedTextField","getTabsContent","i","length","push","components_ScrollableTabsButtonAuto","PureComponent","rootElement","document","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.1713db1b.chunk.js","sourcesContent":["import React from 'react';\nimport pt from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n});\n\nclass OutlinedTextField extends React.Component {\n\n    renderInput = (onChange, hasError) => {\n        return (\n            <TextField\n                id=\"outlined-textarea\"\n                label=\"Paste content here\"\n                placeholder=\"Input\"\n                multiline\n                margin=\"normal\"\n                variant=\"outlined\"\n                className={\"textArea\"}\n                error={hasError}\n                onChange={onChange}\n                rows={15}\n            />\n        )\n    };\n\n    renderOutput = (value) => {\n        return (\n            <TextField\n                id=\"outlined-textarea\"\n                label=\"Copy output\"\n                placeholder=\"Output\"\n                multiline\n                margin=\"normal\"\n                variant=\"outlined\"\n                className={\"textArea\"}\n                value={value}\n                rows={15}\n            />\n        )\n    };\n\n    render() {\n        const { onChange, value, isOutput, hasError } = this.props;\n\n        return isOutput ? this.renderOutput(value) : this.renderInput(onChange, hasError);\n    }\n}\n\nOutlinedTextField.propTypes = {\n    onChange: pt.func,\n    value: pt.string,\n    isOutput: pt.bool,\n    hasError: pt.bool,\n};\n\nOutlinedTextField.defaultProps = {\n    onChange: () => {},\n    value: '',\n    isOutput: false,\n    hasError: false,\n};\n\nexport default withStyles(styles)(OutlinedTextField);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nfunction TabContainer(props) {\n    return (\n        <div style={{padding: 8 * 3}}>\n            {props.children}\n        </div>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n});\n\nclass ScrollableTabsButtonAuto extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({value});\n    };\n\n    render() {\n        const {classes, tabsContent} = this.props;\n        const {value} = this.state;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                        value={value}\n                        onChange={this.handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        scrollable={false}\n                        scrollButtons=\"auto\"\n                        centered\n                    >\n                        {tabsContent.map(\n                            (item, index) => (\n                                <Tab key={index} label={item.label}/>\n                            )\n                        )}\n                    </Tabs>\n                </AppBar>\n\n                {tabsContent.map(\n                    (item, index) => value === index && (\n                        <TabContainer key={index}>{item.component}</TabContainer>\n                    )\n                )}\n            </div>\n        );\n    }\n}\n\nScrollableTabsButtonAuto.propTypes = {\n    classes: PropTypes.object.isRequired,\n    tabsContent: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(ScrollableTabsButtonAuto);","export const getReplacedOutput = (input) => {\n    return input\n        .replace(/&nbsp;/g, `\\\\u00a0`) // space\n        .replace(/&mdash;/g, `\\\\u2014`) // —\n        .replace(/&ndash;/g, `\\\\u2013`) // –\n        .replace(/&laquo;/g, `\\\\u00AB`) // «\n        .replace(/&raquo;/g, `\\\\u00BB`) // »\n        .replace(/&#8381;/g, `\\\\u20BD`) // ₽\n        // .replace(/₽/g, `\\\\u20BD`) // ₽\n        .replace(/&#8198;/g, `\\\\u2006`); // Six-Per-Em Space\n};","// https://github.com/typograf/typograf\nimport Typografer from \"typograf\";\n\nTypografer\n  .addRule({\n    name: 'ru/nbsp/groupNumbersNew',\n    handler(text) {\n      const re = new RegExp(`(^ ?|\\\\D |${Typografer._privateLabel})(\\\\d{1,3}([ \\u00A0\\u202F\\u2009]\\\\d{3})+)(?! ?[\\\\d-])`, 'gm');\n\n      return text.replace(re, function ($0, $1, $2) {\n        return $1 + $2.replace(/\\s/g, '\\u00A0');\n      });\n    }\n  })\n\n  .addRule({\n    name: 'common/nbsp/TinkoffBank',\n    handler: function (text) {\n      return text.replace(/(Тинькофф)\\s+(Банк)/ig, '$1\\u00A0$2');\n    }\n  })\n\n  .addRule({\n    name: 'common/nbsp/TinkoffBlack',\n    handler: function (text) {\n      return text.replace(/(Tinkoff)\\s+(Black)/ig, '$1\\u00A0$2');\n    }\n  })\n\n  .addRule({\n    name: 'common/nbsp/betweenWordAndNumber',\n    handler: function (text) {\n      return text.replace(/([\\wа-я]+) (\\d+)/ig, '$1\\u00A0$2');\n    }\n  })\n\n  .addRule({\n    name: 'common/nbsp/ALLGames',\n    handler: function (text) {\n      return text.replace(/ALL Games/ig, 'ALL\\u00A0Games');\n    }\n  });\n\nconst typograf = new Typografer({\n  locale: [\"ru\", \"en-US\"],\n  live: true,\n  htmlEntity: {\n    type: \"name\",\n    onlyInvisible: true\n  }\n});\n\ntypograf\n  .enableRule('ru/money/currency')\n  .enableRule('common/punctuation/*')\n  .enableRule('common/nbsp/afterNumber')\n  .enableRule('common/symbols/*')\n  .disableRule('ru/nbsp/groupNumbers')\n  .disableRule('ru/date/fromISO')\n  .disableRule('common/number/fraction');\n\nexport const typografer = input => {\n  return typograf.execute(input);\n};\n","import {typografer} from \"./typograf\";\n\nexport const patch = (root) => {\n    if (Array.isArray(root)) {\n        return root.map(el => patch(el));\n    } else if (root !== null && typeof root === \"object\") {\n        return Object.entries(root).reduce((acc, [k, v]) => {\n            if (typeof v === \"string\") {\n                acc[k] = typografer(v);\n            } else {\n                acc[k] = patch(v);\n            }\n\n            return acc;\n        }, {});\n    } else if (typeof root === \"string\") {\n        return typografer(root);\n    } else {\n        return root;\n    }\n};","export const CASES = {\n    JSON: 'json',\n    HTML: 'html',\n    REPLACER: 'replacer',\n};\n\nexport const config = [\n    {\n        name: CASES.JSON,\n        label: 'Json Typograf',\n        textInput: '↓ put json into input below ↓',\n        textError: '⊗ invalid json ⊗',\n        textOutput: 'json output ↵',\n    },\n    {\n        name: CASES.HTML,\n        label: 'Html Typograf',\n        textInput: '↓ put text into input below ↓',\n        textOutput: 'html/json output ↵',\n    },\n    {\n        name: CASES.REPLACER,\n        label: 'String Replacer',\n        textInput: '↓ put text into input below ↓',\n        textOutput: 'replaced text output ↵',\n    },\n];","import React, {Fragment} from \"react\";\n\nimport TextArea from \"./OutlinedTextField\";\nimport Tabs from \"./ScrollableTabsButtonAuto\";\n\nimport {getReplacedOutput} from \"../utils/getReplacedOutput\";\nimport {patch} from \"../utils/patch\";\nimport {typografer} from \"../utils/typograf\";\n\nimport {CASES, config} from \"../constants\";\n\nclass App extends React.PureComponent {\n    state = {\n        result: \"\",\n        error: null,\n    };\n\n    handleInputJSONTypografChange = ({target: {value}}) => {\n        try {\n            const data = JSON.parse(value);\n            const patched = patch(data);\n            this.setState({error: null, result: getReplacedOutput(JSON.stringify(patched, null, 2))});\n        } catch (err) {\n            this.setState({error: err});\n        }\n    };\n\n    handleInputHTMLTypografChange = ({target: {value}}) => {\n        this.setState({ result: typografer(value)});\n    };\n\n    handleInputReplacerChange = ({target: {value}}) => {\n        this.setState({ result: getReplacedOutput(value)});\n    };\n\n    getCaseHandler = name => {\n        switch (name) {\n            case CASES.JSON: return this.handleInputJSONTypografChange;\n            case CASES.HTML: return this.handleInputHTMLTypografChange;\n            case CASES.REPLACER: return this.handleInputReplacerChange;\n        }\n    };\n\n    renderCase = item => {\n        const {result, error} = this.state;\n\n        return (\n            <Fragment>\n                <p>{item.textInput}</p>\n                <TextArea onChange={this.getCaseHandler(item.name)} hasError={item.name === CASES.JSON && error}/>\n                {error && item.textError && <p>{item.textError}</p>}\n                <p>{item.textOutput}</p>\n                {item.name === CASES.HTML ?\n                    (<div className=\"flex-row\">\n                        <TextArea value={result} isOutput/>\n                        <TextArea value={getReplacedOutput(result)} isOutput/>\n                    </div>)\n                 : <TextArea value={result} isOutput/>}\n            </Fragment>\n        )\n    };\n\n    getTabsContent = () => {\n        const tabsContent = [];\n\n        for (let i=0; i < config.length; i++) {\n            tabsContent.push({\n                name: config[i].name,\n                label: config[i].label,\n                component: this.renderCase(config[i]),\n            })\n        }\n\n        return tabsContent;\n    };\n\n    render() {\n\n        return (\n            <div className=\"App\">\n                <Tabs\n                    tabsContent={this.getTabsContent()}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './components/App'\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App/>, rootElement);\n\n"],"sourceRoot":""}